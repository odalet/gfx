// This file is auto generated, do not edit.
using System;

#pragma warning disable CA1069 // Enums values should not be duplicated
namespace ScanPlayer.OpenGL
{
    public enum InternalFormatPName : uint
    {
        Samples = GLConstants.GL_SAMPLES,
        GenerateMipmap = GLConstants.GL_GENERATE_MIPMAP,
        InternalformatSupported = GLConstants.GL_INTERNALFORMAT_SUPPORTED,
        InternalformatPreferred = GLConstants.GL_INTERNALFORMAT_PREFERRED,
        InternalformatRedSize = GLConstants.GL_INTERNALFORMAT_RED_SIZE,
        InternalformatGreenSize = GLConstants.GL_INTERNALFORMAT_GREEN_SIZE,
        InternalformatBlueSize = GLConstants.GL_INTERNALFORMAT_BLUE_SIZE,
        InternalformatAlphaSize = GLConstants.GL_INTERNALFORMAT_ALPHA_SIZE,
        InternalformatDepthSize = GLConstants.GL_INTERNALFORMAT_DEPTH_SIZE,
        InternalformatStencilSize = GLConstants.GL_INTERNALFORMAT_STENCIL_SIZE,
        InternalformatSharedSize = GLConstants.GL_INTERNALFORMAT_SHARED_SIZE,
        InternalformatRedType = GLConstants.GL_INTERNALFORMAT_RED_TYPE,
        InternalformatGreenType = GLConstants.GL_INTERNALFORMAT_GREEN_TYPE,
        InternalformatBlueType = GLConstants.GL_INTERNALFORMAT_BLUE_TYPE,
        InternalformatAlphaType = GLConstants.GL_INTERNALFORMAT_ALPHA_TYPE,
        InternalformatDepthType = GLConstants.GL_INTERNALFORMAT_DEPTH_TYPE,
        InternalformatStencilType = GLConstants.GL_INTERNALFORMAT_STENCIL_TYPE,
        MaxWidth = GLConstants.GL_MAX_WIDTH,
        MaxHeight = GLConstants.GL_MAX_HEIGHT,
        MaxDepth = GLConstants.GL_MAX_DEPTH,
        MaxLayers = GLConstants.GL_MAX_LAYERS,
        ColorComponents = GLConstants.GL_COLOR_COMPONENTS,
        ColorRenderable = GLConstants.GL_COLOR_RENDERABLE,
        DepthRenderable = GLConstants.GL_DEPTH_RENDERABLE,
        StencilRenderable = GLConstants.GL_STENCIL_RENDERABLE,
        FramebufferRenderable = GLConstants.GL_FRAMEBUFFER_RENDERABLE,
        FramebufferRenderableLayered = GLConstants.GL_FRAMEBUFFER_RENDERABLE_LAYERED,
        FramebufferBlend = GLConstants.GL_FRAMEBUFFER_BLEND,
        ReadPixels = GLConstants.GL_READ_PIXELS,
        ReadPixelsFormat = GLConstants.GL_READ_PIXELS_FORMAT,
        ReadPixelsType = GLConstants.GL_READ_PIXELS_TYPE,
        TextureImageFormat = GLConstants.GL_TEXTURE_IMAGE_FORMAT,
        TextureImageType = GLConstants.GL_TEXTURE_IMAGE_TYPE,
        GetTextureImageFormat = GLConstants.GL_GET_TEXTURE_IMAGE_FORMAT,
        GetTextureImageType = GLConstants.GL_GET_TEXTURE_IMAGE_TYPE,
        Mipmap = GLConstants.GL_MIPMAP,
        AutoGenerateMipmap = GLConstants.GL_AUTO_GENERATE_MIPMAP,
        ColorEncoding = GLConstants.GL_COLOR_ENCODING,
        SrgbRead = GLConstants.GL_SRGB_READ,
        SrgbWrite = GLConstants.GL_SRGB_WRITE,
        Filter = GLConstants.GL_FILTER,
        VertexTexture = GLConstants.GL_VERTEX_TEXTURE,
        TessControlTexture = GLConstants.GL_TESS_CONTROL_TEXTURE,
        TessEvaluationTexture = GLConstants.GL_TESS_EVALUATION_TEXTURE,
        GeometryTexture = GLConstants.GL_GEOMETRY_TEXTURE,
        FragmentTexture = GLConstants.GL_FRAGMENT_TEXTURE,
        ComputeTexture = GLConstants.GL_COMPUTE_TEXTURE,
        TextureShadow = GLConstants.GL_TEXTURE_SHADOW,
        TextureGather = GLConstants.GL_TEXTURE_GATHER,
        TextureGatherShadow = GLConstants.GL_TEXTURE_GATHER_SHADOW,
        ShaderImageLoad = GLConstants.GL_SHADER_IMAGE_LOAD,
        ShaderImageStore = GLConstants.GL_SHADER_IMAGE_STORE,
        ShaderImageAtomic = GLConstants.GL_SHADER_IMAGE_ATOMIC,
        ImageTexelSize = GLConstants.GL_IMAGE_TEXEL_SIZE,
        ImageCompatibilityClass = GLConstants.GL_IMAGE_COMPATIBILITY_CLASS,
        ImagePixelFormat = GLConstants.GL_IMAGE_PIXEL_FORMAT,
        ImagePixelType = GLConstants.GL_IMAGE_PIXEL_TYPE,
        SimultaneousTextureAndDepthTest = GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST,
        SimultaneousTextureAndStencilTest = GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST,
        SimultaneousTextureAndDepthWrite = GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE,
        SimultaneousTextureAndStencilWrite = GLConstants.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE,
        TextureCompressedBlockWidth = GLConstants.GL_TEXTURE_COMPRESSED_BLOCK_WIDTH,
        TextureCompressedBlockHeight = GLConstants.GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT,
        TextureCompressedBlockSize = GLConstants.GL_TEXTURE_COMPRESSED_BLOCK_SIZE,
        ClearBuffer = GLConstants.GL_CLEAR_BUFFER,
        TextureView = GLConstants.GL_TEXTURE_VIEW,
        ViewCompatibilityClass = GLConstants.GL_VIEW_COMPATIBILITY_CLASS,
        TextureCompressed = GLConstants.GL_TEXTURE_COMPRESSED,
        ImageFormatCompatibilityType = GLConstants.GL_IMAGE_FORMAT_COMPATIBILITY_TYPE,
        ClearTexture = GLConstants.GL_CLEAR_TEXTURE,
        NumSampleCounts = GLConstants.GL_NUM_SAMPLE_COUNTS
    }
}
#pragma warning restore CA1069 // Enums values should not be duplicated
