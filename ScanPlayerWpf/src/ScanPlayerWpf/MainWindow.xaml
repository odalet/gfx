<Window x:Class="ScanPlayerWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:v="clr-namespace:ScanPlayerWpf.Views"
        xmlns:vm="clr-namespace:ScanPlayerWpf.ViewModels"
        xmlns:conv="clr-namespace:ScanPlayerWpf.Converters"
        xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
        d:DataContext="{Binding MainWindowModel, Source={StaticResource Locator}, Mode=OneTime}"
        mc:Ignorable="d"
        Title="{Binding Title, Mode=OneWay}" 
        AllowDrop="True" DragEnter="OnDragEnter" DragOver="OnDragOver" Drop="OnDrop"
        Width="640" Height="480" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <conv:BooleanToHiddenVisibilityConverter x:Key="BooleanToHiddenVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenCommand, Mode=OneTime}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0">
            <MenuItem Header="_File" VerticalContentAlignment="Top">
                <MenuItem Header="_Open..." Command="{Binding OpenCommand, Mode=OneTime}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <mat:PackIcon Kind="FolderOpen" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand, Mode=OneTime}" InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="_View" DataContext="{Binding DockingManagerViewModel.ViewMenuItemViewModel}" ItemsSource="{Binding Items}">
                <MenuItem.Resources>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Command" Value="{Binding Command}" />
                        <Setter Property="Header" Value="{Binding Header}" />
                        <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
                        <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=OneWay}" />
                    </Style>
                </MenuItem.Resources>
            </MenuItem>
        </Menu>
        
        <ToolBar Grid.Row="1">
            <Button Command="{Binding OpenCommand, Mode=OneTime}">
                <mat:PackIcon Kind="FolderOpen" Height="16" Width="16" ToolTip="Open File (Ctrl+O)" />
            </Button>
        </ToolBar>
        <avalonDock:DockingManager x:Name="DockingManager" Grid.Row="2"
                                   DataContext="{Binding DockingManagerViewModel}"
                                   DocumentsSource="{Binding Documents}"
                                   AnchorablesSource="{Binding Anchorables}">
            <avalonDock:DockingManager.Theme>
                <!--<avalonDock:GenericTheme />-->
                <!--<avalonDock:MetroTheme />-->
                <!--<avalonDock:VS2010Theme />-->
                <!--<avalonDock:AeroTheme />-->
                <avalonDock:Vs2013BlueTheme />
                <!--<avalonDock:Vs2013DarkTheme />-->
                <!--<avalonDock:Vs2013LightTheme />-->
            </avalonDock:DockingManager.Theme>
            <avalonDock:DockingManager.Resources>
                <DataTemplate DataType="{x:Type vm:SceneViewModel}">
                    <v:SceneView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:SceneOptionsViewModel}">
                    <v:SceneOptionsView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:HeadsViewModel}">
                    <v:HeadsView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:TimeViewModel}">
                    <v:TimeView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:LogViewModel}">
                    <v:LogView />
                </DataTemplate>
            </avalonDock:DockingManager.Resources>
            <avalonDock:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type avalonDock:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title, Mode=OneTime}" />
                    <Setter Property="IconSource" Value="{Binding Model.IconSource, Mode=OneTime}"/>
                    <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToHiddenVisibilityConverter}}"/>
                    <Setter Property="ContentId" Value="{Binding Model.ContentId, Mode=OneTime}" />
                    <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                    <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                    <Setter Property="CanClose" Value="false" />
                </Style>
            </avalonDock:DockingManager.LayoutItemContainerStyle>
        </avalonDock:DockingManager>

        <StatusBar Grid.Row="3">
            <StatusBarItem Content="Ready" />
        </StatusBar>
    </Grid>
</Window>
